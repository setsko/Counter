{"version":3,"sources":["Components/Counter/Counter.module.css","Components/Counter/Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","props","useState","count","setCount","className","s","parent","block","outputRed","outputBlack","button","disabled","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,OAAS,wBAAwB,YAAc,6BAA6B,UAAY,6B,kKC2B3FC,MArBR,SAAiBC,GAAqB,IAAD,EACdC,mBAAS,GADK,mBACjCC,EADiC,KAC1BC,EAD0B,KAOxC,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,sBAAKF,UAAWC,IAAEE,MAAlB,UACI,qBAAKH,UAAkB,GAAPF,EAAUG,IAAEG,UAAUH,IAAEI,YAAxC,SAAsDP,IACtD,sBAAKE,UAAWC,IAAEK,OAAlB,UACI,wBAASC,SATmB,IAAVT,EASgBU,QAAS,WAAOT,EAASD,EAAQ,IAAnE,iBACA,wBAASS,SARoB,IAAVT,EAQgBU,QAAS,kBAAMT,EAAS,IAA3D,4BCELU,MAjBf,WAAgB,IAAD,EACcZ,mBAAS,GADvB,mBACJC,EADI,KAEX,OAFW,KAGP,qBAAKE,UAAU,MAAf,SACI,6BACI,cAAC,EAAD,CACQF,MAAOA,SCGhBY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96ecdf23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"parent\":\"Counter_parent__2gudd\",\"outputBlack\":\"Counter_outputBlack__33YO4\",\"outputRed\":\"Counter_outputRed__2AF_T\"};","import React, {ChangeEvent, useState, KeyboardEvent} from \"react\";\r\nimport s from \"./Counter.module.css\";\r\n\r\nexport type CounterType = {\r\n    count: number;\r\n}\r\n\r\nexport function Counter(props: CounterType) {\r\n    const [count, setCount] = useState(0);\r\n\r\n    const disabledInc = () => {return count === 5}\r\n\r\n    const disableReset = () => {return count === 0}\r\n\r\n    return (\r\n        <div className={s.parent}>\r\n            <div className={s.block}>\r\n                <div className={count==5? s.outputRed:s.outputBlack}>{count}</div>\r\n                <div className={s.button}>\r\n                    <button  disabled={disabledInc()} onClick={() => {setCount(count + 1)}}>Inc</button>\r\n                    <button  disabled={disableReset()} onClick={() => setCount(0)}>Reset</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Counter;","import React, {useState} from 'react';\nimport './App.css';\nimport Counter from \"./Components/Counter/Counter\";\n\n\nfunction App() {\n    const [count,setCount] = useState(0);\n    return (\n        <div className=\"App\">\n            <ul>\n                <Counter\n                        count={count}/>\n            </ul>\n\n\n        </div>\n\n    )\n\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}